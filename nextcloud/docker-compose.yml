version: "3.8"

networks:
  npm-network:
    name: npm-network
    external: true

services:
  nextcloud-app:
    image: my-nextcloud #Must build Dockerfile to get 'my-nextcloud' image
    restart: always
    volumes:
      - ${NEXTCLOUD_VOLUME}:/var/www/html
    environment:
      - PHP_MEMORY_LIMIT=2048M
      - PHP_UPLOAD_LIMIT=30G
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_HOST=nextcloud-db
      - REDIS_HOST=nextcloud-redis
      - REDIS_HOST_PASSWORD=${REDIS_HOST_PASSWORD}
    devices:
      - /dev/dri:/dev/dri
    networks:
      - npm-network

  nextcloud-db:
    image: mariadb
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ${MYSQL_VOLUME}:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - npm-network

  nextcloud-redis:
    image: "redis:alpine"
    restart: always
    command: redis-server --requirepass ${REDIS_HOST_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ${REDIS_VOLUME}:/var/lib/redis
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - npm-network

#if cron doesnt work for nextcloud add this command to host machine crontab: */5 * * * * docker exec -u www-data nextcloud-container-name php cron.php 
  cron:
    image: nextcloud:latest
    restart: always
    volumes:
      - ${NEXTCLOUD_VOLUME}:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - nextcloud-app
      - nextcloud-redis
    networks:
      - npm-network

